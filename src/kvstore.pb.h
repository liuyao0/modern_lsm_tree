// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kvstore.proto

#ifndef PROTOBUF_INCLUDED_kvstore_2eproto
#define PROTOBUF_INCLUDED_kvstore_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_kvstore_2eproto 

namespace protobuf_kvstore_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_kvstore_2eproto
namespace KVS {
class DelRequest;
class DelRequestDefaultTypeInternal;
extern DelRequestDefaultTypeInternal _DelRequest_default_instance_;
class GetRequest;
class GetRequestDefaultTypeInternal;
extern GetRequestDefaultTypeInternal _GetRequest_default_instance_;
class KVStoreResponse;
class KVStoreResponseDefaultTypeInternal;
extern KVStoreResponseDefaultTypeInternal _KVStoreResponse_default_instance_;
class PutRequest;
class PutRequestDefaultTypeInternal;
extern PutRequestDefaultTypeInternal _PutRequest_default_instance_;
}  // namespace KVS
namespace google {
namespace protobuf {
template<> ::KVS::DelRequest* Arena::CreateMaybeMessage<::KVS::DelRequest>(Arena*);
template<> ::KVS::GetRequest* Arena::CreateMaybeMessage<::KVS::GetRequest>(Arena*);
template<> ::KVS::KVStoreResponse* Arena::CreateMaybeMessage<::KVS::KVStoreResponse>(Arena*);
template<> ::KVS::PutRequest* Arena::CreateMaybeMessage<::KVS::PutRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace KVS {

// ===================================================================

class GetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KVS.GetRequest) */ {
 public:
  GetRequest();
  virtual ~GetRequest();

  GetRequest(const GetRequest& from);

  inline GetRequest& operator=(const GetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRequest(GetRequest&& from) noexcept
    : GetRequest() {
    *this = ::std::move(from);
  }

  inline GetRequest& operator=(GetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRequest* internal_default_instance() {
    return reinterpret_cast<const GetRequest*>(
               &_GetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GetRequest* other);
  friend void swap(GetRequest& a, GetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRequest* New() const final {
    return CreateMaybeMessage<GetRequest>(NULL);
  }

  GetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetRequest& from);
  void MergeFrom(const GetRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int64 key() const;
  void set_key(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:KVS.GetRequest)
 private:
  void set_has_key();
  void clear_has_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 key_;
  friend struct ::protobuf_kvstore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PutRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KVS.PutRequest) */ {
 public:
  PutRequest();
  virtual ~PutRequest();

  PutRequest(const PutRequest& from);

  inline PutRequest& operator=(const PutRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PutRequest(PutRequest&& from) noexcept
    : PutRequest() {
    *this = ::std::move(from);
  }

  inline PutRequest& operator=(PutRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PutRequest* internal_default_instance() {
    return reinterpret_cast<const PutRequest*>(
               &_PutRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PutRequest* other);
  friend void swap(PutRequest& a, PutRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PutRequest* New() const final {
    return CreateMaybeMessage<PutRequest>(NULL);
  }

  PutRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PutRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PutRequest& from);
  void MergeFrom(const PutRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // required int64 key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int64 key() const;
  void set_key(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:KVS.PutRequest)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int64 key_;
  friend struct ::protobuf_kvstore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KVS.DelRequest) */ {
 public:
  DelRequest();
  virtual ~DelRequest();

  DelRequest(const DelRequest& from);

  inline DelRequest& operator=(const DelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DelRequest(DelRequest&& from) noexcept
    : DelRequest() {
    *this = ::std::move(from);
  }

  inline DelRequest& operator=(DelRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DelRequest* internal_default_instance() {
    return reinterpret_cast<const DelRequest*>(
               &_DelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(DelRequest* other);
  friend void swap(DelRequest& a, DelRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DelRequest* New() const final {
    return CreateMaybeMessage<DelRequest>(NULL);
  }

  DelRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DelRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DelRequest& from);
  void MergeFrom(const DelRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DelRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int64 key() const;
  void set_key(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:KVS.DelRequest)
 private:
  void set_has_key();
  void clear_has_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 key_;
  friend struct ::protobuf_kvstore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KVStoreResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KVS.KVStoreResponse) */ {
 public:
  KVStoreResponse();
  virtual ~KVStoreResponse();

  KVStoreResponse(const KVStoreResponse& from);

  inline KVStoreResponse& operator=(const KVStoreResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KVStoreResponse(KVStoreResponse&& from) noexcept
    : KVStoreResponse() {
    *this = ::std::move(from);
  }

  inline KVStoreResponse& operator=(KVStoreResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KVStoreResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KVStoreResponse* internal_default_instance() {
    return reinterpret_cast<const KVStoreResponse*>(
               &_KVStoreResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(KVStoreResponse* other);
  friend void swap(KVStoreResponse& a, KVStoreResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KVStoreResponse* New() const final {
    return CreateMaybeMessage<KVStoreResponse>(NULL);
  }

  KVStoreResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<KVStoreResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const KVStoreResponse& from);
  void MergeFrom(const KVStoreResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KVStoreResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional string redirect = 4;
  bool has_redirect() const;
  void clear_redirect();
  static const int kRedirectFieldNumber = 4;
  const ::std::string& redirect() const;
  void set_redirect(const ::std::string& value);
  #if LANG_CXX11
  void set_redirect(::std::string&& value);
  #endif
  void set_redirect(const char* value);
  void set_redirect(const char* value, size_t size);
  ::std::string* mutable_redirect();
  ::std::string* release_redirect();
  void set_allocated_redirect(::std::string* redirect);

  // optional int64 key = 2;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  ::google::protobuf::int64 key() const;
  void set_key(::google::protobuf::int64 value);

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:KVS.KVStoreResponse)
 private:
  void set_has_success();
  void clear_has_success();
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();
  void set_has_redirect();
  void clear_has_redirect();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr redirect_;
  ::google::protobuf::int64 key_;
  bool success_;
  friend struct ::protobuf_kvstore_2eproto::TableStruct;
};
// ===================================================================

class KVStoreService_Stub;

class KVStoreService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline KVStoreService() {};
 public:
  virtual ~KVStoreService();

  typedef KVStoreService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void get(::google::protobuf::RpcController* controller,
                       const ::KVS::GetRequest* request,
                       ::KVS::KVStoreResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void put(::google::protobuf::RpcController* controller,
                       const ::KVS::PutRequest* request,
                       ::KVS::KVStoreResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void del(::google::protobuf::RpcController* controller,
                       const ::KVS::DelRequest* request,
                       ::KVS::KVStoreResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(KVStoreService);
};

class KVStoreService_Stub : public KVStoreService {
 public:
  KVStoreService_Stub(::google::protobuf::RpcChannel* channel);
  KVStoreService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~KVStoreService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements KVStoreService ------------------------------------------

  void get(::google::protobuf::RpcController* controller,
                       const ::KVS::GetRequest* request,
                       ::KVS::KVStoreResponse* response,
                       ::google::protobuf::Closure* done);
  void put(::google::protobuf::RpcController* controller,
                       const ::KVS::PutRequest* request,
                       ::KVS::KVStoreResponse* response,
                       ::google::protobuf::Closure* done);
  void del(::google::protobuf::RpcController* controller,
                       const ::KVS::DelRequest* request,
                       ::KVS::KVStoreResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(KVStoreService_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetRequest

// required int64 key = 1;
inline bool GetRequest::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRequest::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRequest::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
  clear_has_key();
}
inline ::google::protobuf::int64 GetRequest::key() const {
  // @@protoc_insertion_point(field_get:KVS.GetRequest.key)
  return key_;
}
inline void GetRequest::set_key(::google::protobuf::int64 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:KVS.GetRequest.key)
}

// -------------------------------------------------------------------

// PutRequest

// required int64 key = 1;
inline bool PutRequest::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PutRequest::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PutRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PutRequest::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
  clear_has_key();
}
inline ::google::protobuf::int64 PutRequest::key() const {
  // @@protoc_insertion_point(field_get:KVS.PutRequest.key)
  return key_;
}
inline void PutRequest::set_key(::google::protobuf::int64 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:KVS.PutRequest.key)
}

// required string value = 2;
inline bool PutRequest::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutRequest::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutRequest::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutRequest::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& PutRequest::value() const {
  // @@protoc_insertion_point(field_get:KVS.PutRequest.value)
  return value_.GetNoArena();
}
inline void PutRequest::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KVS.PutRequest.value)
}
#if LANG_CXX11
inline void PutRequest::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KVS.PutRequest.value)
}
#endif
inline void PutRequest::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KVS.PutRequest.value)
}
inline void PutRequest::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KVS.PutRequest.value)
}
inline ::std::string* PutRequest::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:KVS.PutRequest.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutRequest::release_value() {
  // @@protoc_insertion_point(field_release:KVS.PutRequest.value)
  if (!has_value()) {
    return NULL;
  }
  clear_has_value();
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:KVS.PutRequest.value)
}

// -------------------------------------------------------------------

// DelRequest

// required int64 key = 1;
inline bool DelRequest::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelRequest::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelRequest::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
  clear_has_key();
}
inline ::google::protobuf::int64 DelRequest::key() const {
  // @@protoc_insertion_point(field_get:KVS.DelRequest.key)
  return key_;
}
inline void DelRequest::set_key(::google::protobuf::int64 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:KVS.DelRequest.key)
}

// -------------------------------------------------------------------

// KVStoreResponse

// required bool success = 1;
inline bool KVStoreResponse::has_success() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void KVStoreResponse::set_has_success() {
  _has_bits_[0] |= 0x00000008u;
}
inline void KVStoreResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void KVStoreResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool KVStoreResponse::success() const {
  // @@protoc_insertion_point(field_get:KVS.KVStoreResponse.success)
  return success_;
}
inline void KVStoreResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:KVS.KVStoreResponse.success)
}

// optional int64 key = 2;
inline bool KVStoreResponse::has_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KVStoreResponse::set_has_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KVStoreResponse::clear_has_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KVStoreResponse::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
  clear_has_key();
}
inline ::google::protobuf::int64 KVStoreResponse::key() const {
  // @@protoc_insertion_point(field_get:KVS.KVStoreResponse.key)
  return key_;
}
inline void KVStoreResponse::set_key(::google::protobuf::int64 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:KVS.KVStoreResponse.key)
}

// optional string value = 3;
inline bool KVStoreResponse::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KVStoreResponse::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KVStoreResponse::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KVStoreResponse::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& KVStoreResponse::value() const {
  // @@protoc_insertion_point(field_get:KVS.KVStoreResponse.value)
  return value_.GetNoArena();
}
inline void KVStoreResponse::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KVS.KVStoreResponse.value)
}
#if LANG_CXX11
inline void KVStoreResponse::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KVS.KVStoreResponse.value)
}
#endif
inline void KVStoreResponse::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KVS.KVStoreResponse.value)
}
inline void KVStoreResponse::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KVS.KVStoreResponse.value)
}
inline ::std::string* KVStoreResponse::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:KVS.KVStoreResponse.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KVStoreResponse::release_value() {
  // @@protoc_insertion_point(field_release:KVS.KVStoreResponse.value)
  if (!has_value()) {
    return NULL;
  }
  clear_has_value();
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KVStoreResponse::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:KVS.KVStoreResponse.value)
}

// optional string redirect = 4;
inline bool KVStoreResponse::has_redirect() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KVStoreResponse::set_has_redirect() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KVStoreResponse::clear_has_redirect() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KVStoreResponse::clear_redirect() {
  redirect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_redirect();
}
inline const ::std::string& KVStoreResponse::redirect() const {
  // @@protoc_insertion_point(field_get:KVS.KVStoreResponse.redirect)
  return redirect_.GetNoArena();
}
inline void KVStoreResponse::set_redirect(const ::std::string& value) {
  set_has_redirect();
  redirect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KVS.KVStoreResponse.redirect)
}
#if LANG_CXX11
inline void KVStoreResponse::set_redirect(::std::string&& value) {
  set_has_redirect();
  redirect_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KVS.KVStoreResponse.redirect)
}
#endif
inline void KVStoreResponse::set_redirect(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_redirect();
  redirect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KVS.KVStoreResponse.redirect)
}
inline void KVStoreResponse::set_redirect(const char* value, size_t size) {
  set_has_redirect();
  redirect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KVS.KVStoreResponse.redirect)
}
inline ::std::string* KVStoreResponse::mutable_redirect() {
  set_has_redirect();
  // @@protoc_insertion_point(field_mutable:KVS.KVStoreResponse.redirect)
  return redirect_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KVStoreResponse::release_redirect() {
  // @@protoc_insertion_point(field_release:KVS.KVStoreResponse.redirect)
  if (!has_redirect()) {
    return NULL;
  }
  clear_has_redirect();
  return redirect_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KVStoreResponse::set_allocated_redirect(::std::string* redirect) {
  if (redirect != NULL) {
    set_has_redirect();
  } else {
    clear_has_redirect();
  }
  redirect_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), redirect);
  // @@protoc_insertion_point(field_set_allocated:KVS.KVStoreResponse.redirect)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace KVS

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_kvstore_2eproto
